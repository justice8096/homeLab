services:
    haproxy:
        build: ${SERVICE_ROOT:-/mnt/sdc4}/docker/haproxy
        working_dir: ${SERVICE_ROOT:-/mnt/sdc4}/docker/haproxy
        networks:
            - backbone
            - exter
        environment:
            - X-FRAME-OPTIONS="sameorigin"
        volumes:
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/haproxy/haproxyCode:/code'
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/haproxy/haproxyLogs:/var/log'
        ports:
            - '80:80'
            - '8404:8404'
        depends_on:
            - mongo
            - n8n
            - elasticSearch
            - obsidian
        links:
            - mongo
            - n8n
            - elasticSearch
            - obsidian
            - calibre
            - webdav
    mongo:
        image: 'mongo:latest'
        container_name: mongo
        working_dir: ${SERVICE_ROOT:-/mnt/sdc4}/docker/mongo
        expose:
            - '27017'
        volumes:
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/mongo/mongoDB:/etc/mongo'
        networks:
            - backbone
    n8n:
        image: 'n8nio/n8n:latest'
        container_name: n8n
        expose:
            - '5678'
        ports:
           - '8002:8080'
        working_dir: ${SERVICE_R00T:-/mnt/sdc4}/docker/n8n
        volumes: 
           - '${SERVICE_ROOT:-/mnt/sdc4}/docker/n8n/n8nData:/home/node/.n8n'
        networks: 
            - backbone
    elasticSearch:
        image: 'elasticsearch:8.6.0'
        container_name: elasticSearch
        environment:
            - discovery.type=single-node
        working_dir: ${SERVICE_ROOT:-/mnt/sdc4}/docker/elasticSearch
        volumes:
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/elasticSearch/elasticSearchDB:/usr/share/elasticsearch/data'
        expose:
            - '9200'
        ports:
            - '8004:9300'
        networks: 
            - backbone
    obsidian:
        image: ghcr.io/sytone/obsidian-remote:latest
        container_name: obsidian
        restart: unless-stopped
        expose:
            - '8080'
        ports:
            - '8006:27123'
        volumes:
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/obsidian/obsidianVault:/vaults'
            - '${SERVICE_ROOT:-/mnt/sdc4}/docker/obsidian/obsidianConfig:/config'
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=America/New_York
            - DOCKER_MODS=linuxserver/mods:universal-git
        networks: 
            - backbone
    calibre:
        image: lscr.io/linuxserver/calibre:latest
        container_name: calibre
        security_opt:
         - seccomp:unconfined #optional
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
            - PASSWORD= #optional
            - CLI_ARGS= #optional
        volumes:
            - ${SERVICE_ROOT:-/mnt/sdc4}/docker/calibre/calibreConfig:/config
            - ${CALIBRE_LIBRARY:-/mnt/sdc4/CalibreLibrary2}:/mnt
        expose:
            - 8080
        ports:
            - 8081:8081
        networks:
            - backbone
    webdav:
        image: bytemark/webdav
        restart: always
        expose:
            - 80
        environment:
            AUTH_TYPE: Digest
            USERNAME: storeage
            PASSWORD: power
        volumes:
            - ${SERVICE_ROOT:-/mnt/sdc4}/docker/webdav/storage:/var/lib/dav
        networks:
            - backbone
networks:
    backbone:
        driver: bridge
        external: false
        name: backbone 
    exter:
        driver: bridge
        external: false
        name: exter
volumes:
    tcpdump:
